# utils.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from bot.data_loader import VacancyManager

# —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–π
vacancy_manager = VacancyManager()


# -------------------- –°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π --------------------
async def list_vacancies(update, context, vacancies=None):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π –∫–Ω–æ–ø–∫–∞–º–∏ (–∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞).
    –ï—Å–ª–∏ vacancies –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –±–µ—Ä—ë—Ç –∏—Ö –∏–∑ VacancyManager.
    """
    if vacancies is None:
        vacancies = vacancy_manager.load_vacancies()

    keyboard = [[InlineKeyboardButton(v["title"], callback_data=f"vac_{v['id']}")] for v in vacancies]
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")])

    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:
        await update.message.reply_text("–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π:", reply_markup=reply_markup)
    elif update.callback_query:
        query = update.callback_query
        await query.message.edit_text("–°–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π:", reply_markup=reply_markup)


# -------------------- –î–µ—Ç–∞–ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ --------------------
async def show_vacancy_details(update, context):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏"""
    query = update.callback_query
    await query.answer()

    vac_id = query.data.replace("vac_", "").split("_")[0]

    vac = vacancy_manager.get_vacancy_by_id(int(vac_id))
    if vac:
        text = (
            f"üè¢ –í–∞–∫–∞–Ω—Å–∏—è: {vac['title']}\n"
            f"üìç –ì–æ—Ä–æ–¥: {vac['city']}\n"
            f"üìÑ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {', '.join(vac.get('responsibilities', []))}\n"
            f"üìù –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {', '.join(vac.get('requirements', []))}\n"
            f"üíº –¢–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏: {vac.get('employment_type', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        )
        keyboard = [[InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_list")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup)
